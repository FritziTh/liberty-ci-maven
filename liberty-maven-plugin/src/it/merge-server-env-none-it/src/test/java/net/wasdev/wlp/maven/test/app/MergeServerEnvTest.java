package net.wasdev.wlp.maven.test.app;

import static org.junit.Assert.*;

import java.io.File;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import org.junit.Test;
import org.junit.Assert;

/**
 * 
 * MergeServerEnv
 * 
 */
public class MergeServerEnvTest {

    @Test
    public void testServerEnvFileExists() throws Exception {
        File f1 = new File("liberty/wlp/usr/servers/test", "server.env");
        assertTrue(f1.getCanonicalFile() + " doesn't exist", f1.exists());
    }

    /*
        There is nothing to merge. So should still be the default file.

        # default server.env
        keystore_password=sfKRrA1ioLdtIFQC9bEfkua

        # Merged server.env
        # Generated by liberty-maven-plugin
        keystore_password=sfKRrA1ioLdtIFQC9bEfkua
    */
    @Test
    public void check_server_env_contents() throws Exception {
        File serverEnv = new File("liberty/wlp/usr/servers/test", "server.env");
        try (Scanner s = new Scanner(serverEnv)) {
           Map<String,String> serverEnvContents = new HashMap<String,String>();
            while(s.hasNextLine()) {
                //ignore comment lines
                String line = s.nextLine();
                if(!line.startsWith("#")) {
                    String[] keyValuePair = line.split("=");
                    String key = keyValuePair[0];
                    String value = keyValuePair[1];

                    serverEnvContents.put(key,value);
                } else {
                    Assert.assertFalse("File should not have been generated by liberty-maven-plugin", line.contains("liberty-maven-plugin"));
                }
            }
            
            // The contents of the default server.env can change over time.
            // After 20.0.0.3, for example, the WLP_SKIP_MAXPERMSIZE was removed.
            // Just confirm the keystore_password is present to prove the default server.env was maintained.
            Assert.assertTrue("Number of env properties should be <= 2, but is "+serverEnvContents.size(),  	serverEnvContents.size() <= 2);
            Assert.assertTrue("keystore_password mapping found", serverEnvContents.containsKey("keystore_password"));

        }
    }
}
