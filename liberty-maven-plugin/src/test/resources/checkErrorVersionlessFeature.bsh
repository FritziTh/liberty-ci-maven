//Check build.log content for certain tests
boolean flag = false;
String testname = basedir.getName();
String expectedMessage = null;
switch (testname) {
    case "kernel-install-versionless-feature-fail-bad-platform-it":
         expectedMessage = "CWWKF1515E: The badname platform could not be found.";
         break;
    case "kernel-install-versionless-feature-fail-no-platform-it":
        expectedMessage = "CWWKF1516E: The platform could not be determined. The following versionless features cannot be installed: [servlet]";
         break;
    default:
         return false;
}
File buildlog = new File(basedir,"build.log");
if (buildlog.exists()) {
    try {
        InputStream buildOutput = new FileInputStream(buildlog); 
        InputStreamReader in = new InputStreamReader(buildOutput); 
        java.util.Scanner s = new java.util.Scanner(in);
	    while (s.hasNextLine() && !flag) {
	        String line = s.nextLine();
	        if (line.contains(expectedMessage)) {
	            flag = true;
                System.out.println("Correct error message found for test "+testname);
	        }
	    }
        s.close();
        in.close();
        buildOutput.close();
	} catch (Exception e) {
	    System.out.println("Error checking build.log " + e.getMessage());
	}
}
if (!flag) {
    System.out.println("FAILED: Expected error message ("+expectedMessage+") not found in "+buildlog.getAbsolutePath());
}
return flag;